# Generated by Django 3.0.4 on 2021-05-16 22:23

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import model_utils.fields
import quizzes.models.participant


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('text', models.CharField(max_length=1000, verbose_name='text')),
                ('position', models.PositiveIntegerField(blank=True, verbose_name='position')),
                ('ui_view', models.CharField(choices=[('grid', 'grid'), ('list', 'list')], default='grid', max_length=10, verbose_name='ui view')),
                ('points_to_give', models.PositiveIntegerField(default=1, verbose_name='points to give')),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=300, verbose_name='name')),
                ('slug', models.SlugField(verbose_name='slug')),
            ],
            options={
                'verbose_name': 'quiz',
                'verbose_name_plural': 'quizzes',
            },
        ),
        migrations.CreateModel(
            name='QuizSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='name')),
                ('status', django_fsm.FSMField(default='draft', max_length=50, verbose_name='status')),
                ('current_question_changed', models.DateTimeField(blank=True, help_text="Users have 'seconds_to_answer_question' seconds from this datetime to answer the question", null=True, verbose_name='current question changed at')),
                ('seconds_to_answer_question', models.PositiveIntegerField(default=30, verbose_name='seconds to answer question')),
                ('stream_link', models.URLField(help_text='Link used for the bottom bar in the quiz', verbose_name='stream link')),
                ('current_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quizzes.Question', verbose_name='current question')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='quizzes.Quiz', verbose_name='quiz')),
            ],
            options={
                'verbose_name': 'quiz session',
                'verbose_name_plural': 'quiz sessions',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quizzes.Quiz', verbose_name='quiz'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('token', models.CharField(default=quizzes.models.participant.generate_key, max_length=50, verbose_name='token')),
                ('color', models.CharField(max_length=8, verbose_name='color')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='quizzes.QuizSession')),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
                'unique_together': {('name', 'session')},
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('text', models.CharField(blank=True, default='', max_length=1000, verbose_name='text')),
                ('image', models.ImageField(blank=True, help_text='If provided, it will be used instead of the text. Please provide a text description for accessibility reasons', null=True, upload_to='', verbose_name='image')),
                ('image_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='image width')),
                ('image_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='image height')),
                ('image_format', models.CharField(blank=True, max_length=10, null=True, verbose_name='image format')),
                ('small_image', models.TextField(blank=True, null=True, verbose_name='small image')),
                ('position', models.PositiveIntegerField(blank=True, verbose_name='position')),
                ('is_correct', models.BooleanField(verbose_name='is correct')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.Question', verbose_name='question')),
            ],
            options={
                'verbose_name': 'answer',
                'verbose_name_plural': 'answers',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.Answer')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.Participant')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.Question')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_answers', to='quizzes.QuizSession')),
            ],
            options={
                'verbose_name': 'user answer',
                'verbose_name_plural': 'user answers',
                'unique_together': {('session', 'participant', 'question')},
            },
        ),
    ]
